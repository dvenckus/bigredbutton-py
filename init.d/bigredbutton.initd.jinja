#!/bin/bash
#
# /etc/init.d/bigredbutton
# chkconfig: 2345 99 05
# processname: bigredbutton
# pidfile: /var/run/bigredbutton.pid
# description:  Python application service for bigredbutton
#
### BEGIN INIT INFO
# Provides: bigredbutton
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 3
# Default-Stop: 0 1 2 4 5 6
# Short-Description: start and stop gunicorn for bigredbutton
### END INIT INFO

APPNAME=bigredbutton
APP_PATH=/var/www/html/bigredbutton-py/src
USER={{ user }}
GROUP={{ group }}
PATH=/bin:/usr/bin:/sbin:/usr/sbin
ACTIVATE=bigredbutton_activate
#APPMODULE=yourproject.wsgi:application
APPMODULE=run:app
DAEMON=gunicorn
DAEMON_PATH=/var/www/html/bigredbutton-py/src/brb_env/bin
#BIND=0.0.0.0:8000
VAR_RUN_DIR=/var/run/$APPNAME
BIND=unix:$VAR_RUN_DIR/$APPNAME.sock
PIDFILE=$VAR_RUN_DIR/$APPNAME.pid
LOGDIR=/var/log/$APPNAME
LOGFILE=$LOGDIR/$DAEMON.log
WORKERS=2
WORKER_CLASS="gevent"

# Source function library.
. /etc/rc.d/init.d/functions
#. /lib/lsb/init-functions

. /etc/profile.d/bigredbutton.sh


if [ -e "/etc/default/$APPNAME" ]
then
    . /etc/default/$APPNAME
fi

if [ ! -d "$LOGDIR" ]; then
  mkdir -p $LOGDIR
fi

if [ ! -d "$VAR_RUN_DIR" ]; then
  mkdir -p $VAR_RUN_DIR
  chmod 775 $VAR_RUN_DIR
  chown ${USER}:${GROUP} $VAR_RUN_DIR
fi


case "$1" in
  start)
        $ACTIVATE
        cd $APP_PATH
        echo "$DAEMON --daemon --bind=$BIND --pid=$PIDFILE --name=$APPNAME --workers=$WORKERS --worker-class=$WORKER_CLASS --user=$USER --log-file=$LOGFILE $APPMODULE"
        $DAEMON --daemon --bind=$BIND --pid=$PIDFILE --name=$APPNAME --workers=$WORKERS --worker-class=$WORKER_CLASS --user=$USER --log-file=$LOGFILE $APPMODULE
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
          success "Starting $APPNAME"
        else
          failure "Starting $APPNAME"
        fi
        echo "Starting $APPNAME"
    ;;
  stop)
        #killproc -p $PIDFILE $DAEMON
        #pkill -TERM -F $PIDFILE
        #kill $(pgrep -f $APPNAME)
        pgrep -f $DAEMON | xargs kill -s SIGTERM
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
          success "Stopping $APPNAME"
        else
          failure "Stopping $APPNAME"
        fi
        echo "Stopping $APPNAME"
    ;;
  restart|reload)
      # this won't work here as the worker processes take longer to shutdown and
      # cause the restart to choke
      #/sbin/service $APPNAME stop
      #/sbin/service $APPNAME start
      # here's the best way without using 'superviserctl'
      # https://stackoverflow.com/questions/9881819/a-better-way-to-restart-reload-gunicorn-via-upstart-after-git-pulling-my-dja
      ps aux | grep $DAEMON | grep $APPNAME | awk '{ print $2 }' | xargs kill -HUP
      RETVAL=$?
      if [ $RETVAL -eq 0 ]; then
        success "Reloading $APPNAME"
      else
        failure "Reloading $APPNAME"
        exit 1
      fi
      echo "Reloading $APPNAME"
    ;;
  status)
    #status $APPNAME && exit 0 || exit $?
    if [ -e $PIDFILE ]; then
      echo "$APPNAME is running"
    else
      echo "$APPNAME is NOT running"
      exit 1
    fi
    ;;
  *)
    echo "Usage: /etc/init.d/$APPNAME {start|stop|status|restart|reload}"
    exit 1
    ;;
esac

exit 0
